@page "/Movies/{id:int}" 
@using GetWatch.Pages.Layout
@layout MoviePageLayout
@using GetWatch.Services.Db
@using GetWatch.Services.Movies
@using GetWatch.Services.Movies.Strategy
@using GetWatch.Interfaces.Movies
@inject IMovieRepository MovieRepository

<NavBar/>
        @if (movie != null)
        {
        <header class="movie-hero">
        
          
        <img src="https://image.tmdb.org/t/p/original/@movie.PosterPath" alt="Movie Background" class="hero-background" />
        <h1 class="movie-title">@movie.Title</h1>
        <div class="hero-actions">
          <button class="primary-button">
            <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/a0a40d3feafbecc147030129826490c0ee592808?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Ticket" class="button-icon" />
            <span>Reservar Bilhetes</span>
          </button>
          <div class="action-buttons">
            <button class="icon-button">
              <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/e44857ca31981cfdf28982666dbb3ff14fe1e0cb?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Action" class="button-icon" />
            </button>
          </div>
        </div>
      </header>
      
      <main class="movie-content">
        <section class="movie-info">
          <article class="description-section">
            <h2 class="section-title">Description</h2>
            <p class="description-text">@movie.Overview</p>
          </article>
      
          <article class="cast-section">
    <h2 class="cast-title">Cast</h2>
    <div class="cast-images">
        @foreach (var castMember in movie.Credits.Cast.Take(5))
        {
            <div class="cast-card" title="@castMember.KnownForDepartment">
                <img src="https://image.tmdb.org/t/p/w500/@castMember.ProfilePath" alt="@castMember.Name" class="cast-photo fade-in" />
                <div class="cast-name">@castMember.Name</div>
                <div class="cast-character">as @castMember.Character</div>
            </div>
        }
    </div>
</article>

        </section>
      
        <aside class="movie-metadata">
          <div class="metadata-item">
            <div class="metadata-header">
              <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/14c718d8a29e1f926d9223c936ba4cd260b53661?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Calendar" class="metadata-icon" />
              <h3 class="metadata-title">Released Date</h3>
            </div>
            <p class="metadata-value">@movie.ReleaseDate</p>
          </div>
      
          <div class="metadata-item">
            <div class="metadata-header">
              <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/a95882487758e90773c38e5b0efbf0e386ab56d9?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Language" class="metadata-icon" />
              <h3 class="metadata-title">Available Languages</h3>
            </div>
            <div class="language-tags">
              <span class="tag">English</span>
              <span class="tag">Portuguese</span>
              <span class="tag">Spanish</span>
              <span class="tag">Russian</span>
            </div>
          </div>
      
          <div class="metadata-item">
            <div class="metadata-header">
              <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/25a7186b581d224614de8999be140270bf633361?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Star" class="metadata-icon" />
              <h3 class="metadata-title">Other Information</h3>
            </div>
            <div class="ratings-container">
              <div class="rating-item">
                
                <p class="rating-value">@movie.Popularity</p>
              </div>  
              <div class="rating-item">
                
                <p class="rating-value">Runtime(minutes): @movie.Runtime</p>
              </div>  
            </div>
          </div>
      
          <div class="metadata-item">
            <div class="metadata-header">
              <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/ab8163cf5821c1f1ca86a564ed4c14a2856e4392?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Genre" class="metadata-icon" />
              <h3 class="metadata-title">Gernes</h3>
            </div>
            <div class="genre-tags">
              @foreach (var genre in movie.Genres)
              {
                <span class="tag">@genre.Name</span>
              }
            </div>
          </div>
      
          <div class="metadata-item">
            <h3 class="metadata-title">Director</h3>
            @foreach (var director in movie.Credits.Crew.Where(c => c.Job == "Director").Take(1))
            {
            <div class="director-info">
              <img src="https://image.tmdb.org/t/p/w500/@director.ProfilePath" alt="@director.Name" class="director-photo" />
              <span class="director-name">@director.Name</span>
            </div>
            }
          </div>
        </aside>
      </main>
      }else{
        <div class="loading-container">
          <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/0c3f2a4b5d8e7f9b6c3e4a0d8f1e2b3c4d5e6f7g?placeholderIfAbsent=true&apiKey=3839db6e635741deb3068622d1f46e69" alt="Loading" class="loading-image" />
          <p class="loading-text">Loading movie details...</p>
        </div>
      }
      <Footer/>

@code {
    [Parameter]
    public int id { get; set; }


    private PopularApiMovie? movie;

    protected override async Task OnInitializedAsync()
    {
      Console.WriteLine($"Movie ID: {id}");
        try
        {
            var httpclient = new HttpClient();
            var MovieIdStrategy = new MovieByIdFetchStrategy(id);
            var movieFetcher = new SingleMovieFetcher(MovieIdStrategy);
            // Fetch popular movies using the injected MovieRepository
            movie = await movieFetcher.FetchMovieAsync(httpclient);
            if (movie == null)
            {
                Console.WriteLine($"Movie with ID {id} not found.");
            }
            else
            {
                Console.WriteLine($"Movie Title: {movie.Title}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching movie details: {ex.Message}");
        }
    }

    
}