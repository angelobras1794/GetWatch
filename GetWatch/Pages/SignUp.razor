@page "/SignUp"

@using GetWatch.Pages.Layout
@using GetWatch.Pages
@using GetWatch.Services.Db
@using GetWatch.Services
@inject UserCreationService UserCreationService
@inject NavigationManager NavigationManager




@layout LoginPageLayout
<NavBar/>
<div class="login-container">
        <section class="login-section">
          <div class="login-content">
            <h1 class="login-title">Create Account</h1>
            <form class="login-form" @onsubmit="HandleSubmit">
              <div class="form-group">
                <label for="username" class="form-label">Username</label>
                <div class="input-wrapper">
                  <input
                    type="username"
                    id="username"
                    placeholder="CrazyMango123"
                    class="form-input"
                    @bind="username"
                  />
                </div>
              </div>
              <div class="form-group">
                <label for="email" class="form-label">Email</label>
                <div class="input-wrapper">
                  <input
                    type="email"
                    id="email"
                    placeholder="Example@email.com"
                    class="form-input"
                    @bind="email"
                  />
                </div>
              </div>
              <div class="form-group">
                <label for="password" class="form-label">Password</label>
                <div class="input-wrapper">
                  <input
                    type="password"
                    id="password"
                    placeholder="At least 8 characters"
                    class="form-input"
                    @bind="password"
                  />
                </div>
              </div>
             <div class="form-group">
                <label for="password" class="form-label">ConfirmPassword</label>
                <div class="input-wrapper">
                  <input
                    type="password"
                    id="confirmpassword"
                    placeholder="At least 8 characters"
                    class="form-input"
                    @bind="confirmPassword"
                  />
                </div>
              </div>
              <button type="submit" class="signUp-button">Create account</button>
            </form>
            @if (!string.IsNullOrEmpty(feedbackMessage))
            {
                <p class="feedback-message @(isError ? "error" : "success")">@feedbackMessage</p>
            }
            <div class="divider">
              <div class="divider-line"></div>
              <span class="divider-text">Or</span>
              <div class="divider-line"></div>
            </div>
          </div>
        </section>
        <section class="art-section">
          <img src="https://cdn.builder.io/api/v1/image/assets/TEMP/09696e8c1bfa9e44555af5eed0d17577d3a64d54" alt="Movie posters collage" class="art-image" />
        </section>
</div>
        <Footer/>




@code {

    private string username = string.Empty;
    private string email = string.Empty;
    private string password = string.Empty;
    private string confirmPassword = string.Empty;
    private string feedbackMessage = string.Empty;
    private bool isError = false;


    private async Task HandleSubmit()
    {
        try
        {
            validateFormData();
            var user = new DbUser
            {
                Name = username,
                Email = email,
                Password = password
            };

             UserCreationService.CreateUser(user);
            feedbackMessage = "Account created successfully! Redirecting to login...";
            isError = false;
            NavigationManager.NavigateTo("/Login", true);
        }
        catch (Exception ex)
        {
            feedbackMessage = $"Error: {ex.Message}";
            isError = true;
        }
    }

    public void validateFormData(){
       if (string.IsNullOrWhiteSpace(username) || string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password))
            {
                feedbackMessage = "All fields are required.";
                isError = true;
                return;
            }

            if (password != confirmPassword)
            {
                feedbackMessage = "Passwords do not match.";
                isError = true;
                return;
            }
    }
    
}        